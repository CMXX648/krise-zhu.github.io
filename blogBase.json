{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "KriseZhu", "subTitle": "\u5b66\u4e60\u535a\u5ba2", "avatarUrl": "https://avatars.githubusercontent.com/u/90679613?v=4", "GMEEK_VERSION": "last", "postListJson": {"P3": {"htmlDir": "docs/post/xian-cheng-de-tong-bu-yu-hu-chi.html", "labels": ["documentation"], "postTitle": "\u7ebf\u7a0b\u7684\u540c\u6b65\u4e0e\u4e92\u65a5", "postUrl": "post/xian-cheng-de-tong-bu-yu-hu-chi.html", "postSourceUrl": "https://github.com/CMXX648/krise-zhu.github.io/issues/3", "commentNum": 0, "wordCount": 5239, "description": "```C++\r\n#include<iostream>\r\n#include<Windows.h>\r\n#include<vector>\r\n#include<set>\r\nusing namespace std;\r\n\r\n#define MAX_THREAD_NUM 20\r\n#define MAX_BUFFER_NUM 50\r\n#define MAX_PRODUCE_NUM 200\r\n\r\nint thread_num;//\u7ebf\u7a0b\u6570\u91cf\r\nint n_buffer;//\u7f13\u51b2\u533a\u6570\u91cf\r\nint n_produce;//\u4ea7\u54c1\u6570\u91cf\r\nint Buffer[MAX_BUFFER_NUM];//\u7f13\u51b2\u533a\r\nHANDLE thread_list[MAX_THREAD_NUM];//\u7ebf\u7a0b\u5217\u8868\r\nHANDLE empty_semaphore;//\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u540c\u6b65\r\nHANDLE p_mutex;//\u751f\u4ea7\u8005\u4e92\u65a5\r\nHANDLE syn_semaphore[MAX_PRODUCE_NUM];//\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\u540c\u6b65\r\nCRITICAL_SECTION pc_cirtical[MAX_BUFFER_NUM];//\u6d88\u8d39\u8005\u4e92\u65a5\r\n\r\n//\u7ebf\u7a0b\u4fe1\u606f\r\nclass Thread_Info{\r\npublic:\r\n\tint thread_id;//id\r\n\tchar kind;//\u79cd\u7c7b\r\n\tdouble delay;//\u7ebf\u7a0b\u54cd\u5e94\u5ef6\u8fdf\r\n\tvector<int> request;//\u8bf7\u6c42\u961f\u5217\r\n\tint n_request;//\u8bf7\u6c42\u6570\u91cf\r\n};\r\n\r\nvector<Thread_Info> thread_info;//\u7ebf\u7a0b\u4fe1\u606f\u6570\u7ec4\r\nset<int> t_set;//\u7edf\u8ba1\u5b9e\u9645\u4ea7\u54c1\u6570\u91cf\r\n\r\nvoid PriBuffer(){\r\n\tcout << endl << '********************Buffer********************' << endl << endl;\r\n\tfor (int i = 0; i < n_buffer; i++){\r\n\t\tcout << '[' << i << ']: ' << Buffer[i]<<'      ';\r\n\t\tif ((i+1) % 5 == 0){\r\n\t\t\tcout << endl;\r\n\t\t}\r\n\t}\r\n\tcout << endl << '********************Buffer********************' << endl << endl;\r\n}\r\n\r\nint FindProducePosition(){\r\n\tfor (int i = 0; i < n_buffer; i++){\r\n\t\tif (Buffer[i] == -1) { \r\n\t\t\tBuffer[i] = -2;//\u6807\u8bb0\u6709\u5185\u5bb9\t\t\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint FindBufferPosition(int product){\r\n\tfor (int i = 0; i < n_buffer; i++){\r\n\t\tif (Buffer[i] == product) return i;\r\n\t}\r\n}\r\n\r\n//\u751f\u4ea7\u8005\r\nvoid Produce(void *p){\r\n\tint thread_id = ((Thread_Info*)p)->thread_id;\r\n\tchar kind = ((Thread_Info*)p)->kind;\r\n\tdouble delay = ((Thread_Info*)p)->delay;\r\n\tint n_rerquest = ((Thread_Info*)p)->n_request;\r\n\tvector<int> request = ((Thread_Info*)p)->request;\r\n\tSleep(delay);//\u4f11\u7720\r\n\tcout << '\u751f\u4ea7\u8005 ' << thread_id << ' \u5f00\u59cb\u751f\u4ea7' << endl;\r\n\r\n\tfor (int i = 0; i < n_rerquest; i++){\r\n\t\tWaitForSingleObject(empty_semaphore, -1);//\u4e0d\u4e3a\u7a7a\u6267\u884c\uff0c\u4e3a\u7a7a\u963b\u585e\r\n\r\n\t\tWaitForSingleObject(p_mutex, -1);//\u6ca1\u6709\u5176\u4ed6\u751f\u4ea7\u8005\u5219\u6267\u884c\r\n\t\tint ProducePos = FindProducePosition();\r\n\t\t\r\n\r\n\t\t//\u4ee5\u4e0b\u4ee3\u7801\u53ef\u5f02\u6b65 \u539f\u56e0\uff1a\u5728\u5206\u914d\u4f4d\u7f6e\u8fc7\u7a0b\u4e2d\u5bf9\u6570\u7ec4\u6807\u8bb0\r\n\t\tcout << '\u751f\u4ea7\u8005 ' << thread_id << ' \u5f00\u59cb\u751f\u4ea7\u4ea7\u54c1: ' << request.at(i) << endl;\r\n\t\tBuffer[ProducePos] = request.at(i);\r\n\t\tcout << '\u751f\u4ea7\u8005 ' << thread_id << ' \u751f\u4ea7\u5b8c\u6210\u4ea7\u54c1: ' << request.at(i) << endl;\r\n\t\tcout << 'Buffer[' << ProducePos << '] : ' << request.at(i) << endl;\r\n\t\tPriBuffer();//\u8f93\u51fa\u7ed3\u679c\r\n\t\tReleaseMutex(p_mutex);//\u4e4b\u6240\u4ee5\u653e\u5728\u8fd9\u91cc\u662f\u6837\u95eecout\u53ef\u80fd\u88ab\u62c6\u5206\r\n\t\tReleaseSemaphore(syn_semaphore[request.at(i)], 1, NULL);\r\n\t}\r\n}\r\n\r\n//\u6d88\u8d39\u8005\r\nvoid Consume(void *p){\r\n\tDWORD wait_for_semaphore;\r\n\tint thread_id = ((Thread_Info*)p)->thread_id;\r\n\tchar kind = ((Thread_Info*)p)->kind;\r\n\tdouble delay = ((Thread_Info*)p)->delay;\r\n\tint n_rerquest = ((Thread_Info*)p)->n_request;\r\n\tvector<int> request = ((Thread_Info*)p)->request;\r\n\tSleep(delay);//\u4f11\u7720\r\n\r\n\tfor (int i = 0; i < n_rerquest; i++){\r\n\t\twait_for_semaphore = WaitForSingleObject(syn_semaphore[request.at(i)], -1);//\u4ea7\u54c1\u5b58\u5728\u5219\u6d88\u8d39\r\n\t\tcout << '\u6d88\u8d39\u8005 ' << thread_id << ' \u8bf7\u6c42\u6d88\u8d39\u4ea7\u54c1 ' << request.at(i) << endl;\r\n\t\tint ProductPos = FindBufferPosition(request.at(i));//\u627e\u5230\u4ea7\u54c1\u4f4d\u7f6e\r\n\t\tEnterCriticalSection(&pc_cirtical[request.at(i)]);\r\n\t\tcout << '\u6d88\u8d39\u8005 ' << thread_id << ' \u5f00\u59cb\u6d88\u8d39\u4ea7\u54c1 ' << request.at(i) << endl;\r\n\t\tBuffer[ProductPos] = -1;\r\n\t\tcout << '\u6d88\u8d39\u8005 ' << thread_id << ' \u6d88\u8d39\u5b8c\u6210\u4ea7\u54c1 ' << request.at(i) << endl;\r\n\t\tPriBuffer();//\u8f93\u51fa\u7ed3\u679c\r\n\t\tReleaseSemaphore(empty_semaphore, 1, NULL);\r\n\t\tLeaveCriticalSection(&pc_cirtical[request.at(i)]);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\r\n\tcout << '\u8bf7\u8f93\u5165\u7ebf\u7a0b\u6570\u91cf: ';\r\n\tcin >> thread_num;\r\n\tcout << '\u8bf7\u8f93\u5165\u7f13\u51b2\u533a\u6570\u91cf: ';\r\n\tcin >> n_buffer;\r\n\tcout << '\u8bf7\u8f93\u5165\u7ebf\u7a0b\u4fe1\u606f (\u4f8b\uff1ap 100 1 2 3) p.c\u4e3a\u7c7b\u578b \u6570\u5b57\u4e3a\u5ef6\u8fdf\u548c\u4ea7\u54c1id' << endl;\r\n\tcout << endl << '********************************************' << endl << endl;\r\n\r\n\tfor (int i = 0; i < MAX_BUFFER_NUM; i++){\r\n\t\tBuffer[i] = -1;\r\n\t}\r\n\r\n\tfor (int i = 0; i < thread_num; i++){\r\n\t\tThread_Info t_thread_info;\r\n\t\tcout << '\u7ebf\u7a0b ' << i << ' :';\r\n\t\tcin >> t_thread_info.kind;//\u8f93\u5165\u79cd\u7c7b\r\n\t\tcin >> t_thread_info.delay;//\u8f93\u5165\u5ef6\u8fdf\r\n\t\tt_thread_info.thread_id = i;//\u521d\u59cb\u5316\u7ebf\u7a0bid\r\n\t\tint t_num;\r\n\t\twhile (cin >> t_num){\r\n\t\t\t\r\n\t\t\tt_thread_info.request.push_back(t_num);\r\n\t\t\tif (t_thread_info.kind == 'p') t_set.insert(t_num); \r\n\t\t\tt_thread_info.n_request++;\r\n\t\t\tif (cin.get() == '\\n') break;\r\n\t\t}\r\n\t\tthread_info.push_back(t_thread_info);\r\n\t}\r\n\r\n\tn_produce = t_set.size();\r\n\tempty_semaphore = CreateSemaphore(NULL, n_buffer, n_buffer, (LPCWSTR)'semaphore_for_empty');//\u521d\u59cb\u5316\u540c\u6b65\u4fe1\u53f7\u91cf\r\n\tp_mutex = CreateMutex(NULL, FALSE, (LPCWSTR)'mutex_for_update');//\u521d\u59cb\u5316\u4e92\u65a5\u53d8\u91cf\r\n\tfor (int i = 0; i < n_produce; i++){\r\n\t\tstring lp = 'semaphore_for_prodece_';\r\n\t\tint t = i;\r\n\t\twhile (t){\r\n\t\t\tchar ch = (char)(t % 10);\r\n\t\t\tlp += ch;\r\n\t\t\tt /= 10;\r\n\t\t}\r\n\t\tsyn_semaphore[i] = CreateSemaphore(NULL, 0, MAX_PRODUCE_NUM, (LPCWSTR)lp.c_str());\r\n\t}\r\n\tfor (int i = 0; i < MAX_BUFFER_NUM; i++){\r\n\t\tInitializeCriticalSection(&(pc_cirtical[i]));//\u521d\u59cb\u5316\u4e34\u754c\u91cf\r\n\t}\r\n\r\n\tcout << endl << '********************************************' << endl << endl;;\r\n\tcout << '********************\u7ebf\u7a0b\u5f00\u59cb\u6267\u884c********************' << endl;\r\n\tfor (int i = 0; i < thread_num; i++){\r\n\t\tif (thread_info.at(i).kind == 'p')\r\n\t\t\tthread_list[i] = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)(Produce), &thread_info.at(i), 0, NULL);\r\n\t\telse\r\n\t\t\tthread_list[i] = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)(Consume), &thread_info.at(i), 0, NULL);\r\n\t}\r\n\r\n\tWaitForMultipleObjects(thread_num, thread_list, TRUE, -1);\r\n\tcout << endl << '********************\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f********************' << endl<<endl;\r\n\tcout << '\u5b8c\u6210!' << endl;\r\n\treturn 0;\r\n}\r\n```\r\n\u3002", "top": 0, "createdAt": 1720438368, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/90679613?v=4", "createdDate": "2024-07-08", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "KriseZhu", "faviconUrl": "https://avatars.githubusercontent.com/u/90679613?v=4", "ogImage": "https://avatars.githubusercontent.com/u/90679613?v=4", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://CMXX648.github.io/krise-zhu.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}